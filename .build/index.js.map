{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["\n\nfunction deleteGreatestValue(grid: number[][]): number {\n  let arr: number[] = []\n    for(let k = 0; k <= grid.length; k++) {\n        // create a placeholder array to compare each row's max value\n        let temp: number[] = []\n        for (let i = 0; i < grid.length; i++) {\n            let max: number = 0;\n            // iterate over the individual rows\n            for (let j = 0; j < grid[i].length; j++) {\n                max = Math.max(max, grid[i][j])\n            }\n          console.log(max)\n            temp.push(max)\n            grid[i].splice(grid[i].indexOf(max), 1)\n            if(grid[i].length > 0){\n                k = 0\n            }\n        }\n        arr.push(Math.max(...temp))\n    }\n    return arr.reduce( (pv, cv) => pv + cv, 0)\n};\n\nconsole.log(deleteGreatestValue([[11,2,4],[8,3,1]]))\n\n// 11, 8 / 4, 3 / 2, 1"],
  "mappings": ";AAEA,SAAS,oBAAoB,MAA0B;AACrD,MAAI,MAAgB,CAAC;AACnB,WAAQ,IAAI,GAAG,KAAK,KAAK,QAAQ,KAAK;AAElC,QAAI,OAAiB,CAAC;AACtB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,UAAI,MAAc;AAElB,eAAS,IAAI,GAAG,IAAI,KAAK,GAAG,QAAQ,KAAK;AACrC,cAAM,KAAK,IAAI,KAAK,KAAK,GAAG,EAAE;AAAA,MAClC;AACF,cAAQ,IAAI,GAAG;AACb,WAAK,KAAK,GAAG;AACb,WAAK,GAAG,OAAO,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC;AACtC,UAAG,KAAK,GAAG,SAAS,GAAE;AAClB,YAAI;AAAA,MACR;AAAA,IACJ;AACA,QAAI,KAAK,KAAK,IAAI,GAAG,IAAI,CAAC;AAAA,EAC9B;AACA,SAAO,IAAI,OAAQ,CAAC,IAAI,OAAO,KAAK,IAAI,CAAC;AAC7C;AAAC;AAED,QAAQ,IAAI,oBAAoB,CAAC,CAAC,IAAG,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,CAAC,CAAC,CAAC,CAAC;",
  "names": []
}
